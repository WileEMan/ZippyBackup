<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAD++QAA/vwAAA==
</value>
  </data>
</root>